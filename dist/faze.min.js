/*! hash:f6d28fd25911f68c1e7b, chunkhash:edc713cadbcbd07d9082, name:main, filebase:faze.min.js, query:, file:faze.min.js */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/faze.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/faze.js":
/*!*********************!*\
  !*** ./src/faze.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function(){\r\n\r\n    var domReadyStack = [];\r\n\r\n    function handleDOmReady(fn) {\r\n      return document.readyState === 'complete' ? fn.call( document ) : domReadyStack.push( fn );\r\n    }\r\n\r\n    document.addEventListener( 'DOMContentLoaded', function onDOMReady() {\r\n      document.removeEventListener( 'DOMContentLoaded', onDOMReady );\r\n      while( domReadyStack.length ) {\r\n        domReadyStack.shift().call( document );\r\n      }\r\n    });\r\n\r\n    var defaults = {\r\n      version: \"1.0.0\"\r\n    };\r\n\r\n    /**\r\n     * [Faze instance constructor]\r\n     * @param {Faze} selector [description]\r\n     */\r\n    var Faze = function( selector ) {\r\n\r\n      if( !(this instanceof Faze) ) {\r\n        return new Faze( selector );\r\n      }\r\n\r\n      if( !selector ){\r\n        return;\r\n      }\r\n\r\n      var extended = {};\r\n\r\n      for( var prop in defaults ) {\r\n        if(Object.prototype.hasOwnProperty.call( defaults, prop ) ) {\r\n          extended[prop] = defaults[prop];\r\n          this[prop] = defaults[prop];\r\n        }\r\n      }\r\n\r\n      this.length = 0;\r\n      this.nodes  = [];\r\n      this.events = [];\r\n      this.cache  = [];\r\n\r\n      if( selector instanceof HTMLElement || selector instanceof NodeList ) {\r\n        this.nodes = selector.length > 1 ? [].slice.call( selector ) : [ selector ];\r\n      }\r\n      else if( typeof selector === 'string' ) {\r\n        if( selector[0] === '<' && selector[selector.length - 1] === '>' ) {\r\n          this.nodes = [ createNodes( selector ) ];\r\n        }\r\n        else {\r\n          this.nodes = [].slice.call( document.querySelectorAll( selector ) );\r\n        }\r\n      }\r\n      else if( selector.toString() === \"[object HTMLDocument]\" && typeof selector === \"object\" ) {\r\n        this.nodes = [selector];\r\n        this[i] = selector;\r\n        this.length = 1;\r\n      }\r\n\r\n      if( this.nodes.length ) {\r\n        this.length = this.nodes.length;\r\n        for( var i = 0; i < this.nodes.length; i++ ) {\r\n          this[i] = this.nodes[i];\r\n        }\r\n      }\r\n    };\r\n\r\n    Faze.fn = Faze.prototype;\r\n    window.Faze = window.fz = Faze;\r\n\r\n    // private functions ====================================\r\n\r\n    /**\r\n     * [createNodes - create custom html nodes]\r\n     * @param  {string} html [html string]\r\n     * @return {node}      [returns html node]\r\n     */\r\n    function createNodes( html ) {\r\n      var div = document.createElement( 'div' );\r\n      div.innerHTML = html;\r\n      return div.firstChild;\r\n    }\r\n\r\n    function class2type() {\r\n      return {};\r\n    }\r\n\r\n    function isWindow( obj ) {\r\n      return obj != null && obj === obj.window;\r\n    }\r\n\r\n    function isLikeArray( obj ) {\r\n      var length = !!obj && obj.length;\r\n      var type = toType( obj );\r\n      if( typeof obj === \"function\" || isWindow( obj ) ) {\r\n        return false;\r\n      }\r\n\r\n      return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && ( length -1 ) in obj;\r\n    }\r\n\r\n    function toString() {\r\n      return class2type.toString;\r\n    }\r\n\r\n    function isHTMLElement( option ) {\r\n      return option instanceof HTMLElement;\r\n    }\r\n\r\n    function isNodeList( options ) {\r\n      return options instanceof NodeList();\r\n    }\r\n\r\n    function toType( obj ) {\r\n      if( obj == null ) {\r\n        return obj + \"\";\r\n      }\r\n\r\n      return typeof obj === \"object\" ? \r\n        class2type[ toString.call( obj ) ] || \"object\" :\r\n        typeof obj;\r\n    }\r\n\r\n    /**\r\n     * Loop through each element\r\n     * @param  {Function} callback [callback function]\r\n     * @return {Faze}            [returns faze instance]\r\n     */\r\n    Faze.fn.each = function( callback ) {\r\n      for( var i = 0; i < this.length; i++ ) {\r\n        callback.call( this, this[i], i );\r\n      }\r\n      return this;\r\n    } \r\n\r\n    Faze.fn.domReady = handleDOmReady;\r\n\r\n    Faze.fn.isHTMLElement = isHTMLElement;\r\n    Faze.fn.isNodeList = isNodeList;\r\n\r\n    // class helper ======================================\r\n    Faze.fn.addClass = function( classname ) {\r\n      this.each( function( item ) {\r\n        item.classList.add( classname );\r\n      }); \r\n      return this;\r\n    } \r\n\r\n    Faze.fn.removeClass = function( classname ) {\r\n      this.each( function( item ) {\r\n        item.classList.remove( classname );\r\n      });\r\n    }\r\n\r\n    Faze.fn.toggleClass = function( classname ) {\r\n      this.each( function( item ) {\r\n        if( item.classList.contains( classname ) ) {\r\n          this.removeClass( classname );\r\n        }\r\n        else {\r\n          this.addClass( classname );\r\n        }\r\n      });\r\n    }\r\n\r\n    Faze.fn.hasClass = function( classname ) {\r\n      debugger;\r\n      var hasClass = [];\r\n      this.each( function( item ) {\r\n\r\n        var classnames = classname.split('.').filter(Boolean);\r\n\r\n        for( var i = 0; i < classnames; i++ ) {\r\n          hasClass.push( item.classList.contains( classnames[i] ) );\r\n        }\r\n      });\r\n\r\n      if( hasClass.length === 1 && hasClass[0] ) {\r\n        return true;\r\n      } \r\n\r\n      return this.all( hasClass ) ? true : false;\r\n    }\r\n\r\n\r\n    // styling ============================================\r\n    Faze.fn.css = function( opt1, opt2 ) {\r\n      if( typeof opt1 === 'string' && typeof opt2 === 'string' ) {\r\n        this.each( function( item ) {\r\n          if( null !== item.style[opt1] ) {\r\n            item.style[opt1] = opt2;\r\n          }\r\n        });\r\n      }\r\n      else if( typeof opt1 === \"object\" ) {\r\n        this.each( function( item ) {\r\n          Faze( opt1 ).each( function( option, index ) {\r\n            item.style[index] = option[index];\r\n          })\r\n        });\r\n      }\r\n    }\r\n\r\n    Faze.fn.changeColour = function( color, ammount ) {\r\n      var useHash = false;\r\n\r\n      if( color[0] === '#' ) {\r\n        color = color.slice( 1 );\r\n        useHash = true;\r\n      }\r\n\r\n      var num = parseInt( color, 16 );\r\n\r\n      var r = ( num >> 16 ) + ammount;\r\n\r\n      if( r > 255 ) {\r\n        r = 255;\r\n      }\r\n      else if( r < 0 ) {\r\n        r = 0;\r\n      }\r\n\r\n      var b = (( num >> 8 ) & 0x00FF ) + ammount;\r\n\r\n      if( b > 255 ) {\r\n        b = 255; \r\n      }\r\n      else if( b < 0 ) {\r\n        b = 0;\r\n      }\r\n\r\n      var g = (num & 0x0000FF) + ammount;\r\n\r\n      if( g > 255 ) {\r\n        g = 255;\r\n      }\r\n      else if( g < 0 ) {\r\n        g = 0;\r\n      }\r\n\r\n      return ( useHash ? '#' : '' ) + ( g |( b << 8 ) | ( r << 16 ) ).toString( 16 );\r\n    }\r\n\r\n\r\n    // String =============================================\r\n    Faze.fn.trim = function( string ) {\r\n      return string.replace( /\\s+/g, '' );\r\n    }\r\n\r\n\r\n    // array ==============================================\r\n    Faze.fn.isArray = function( array ) {\r\n      return [].isArray( array );\r\n    }\r\n\r\n    Faze.fn.inArray = function( value, array ) {\r\n      if( array && this.isArray( array ) ) {\r\n        return array.indexOf( value ) > -1;\r\n      }\r\n      else if( this.isArray( this.nodes ) ) {\r\n        return this.nodes.indexOf( value ) > -1; \r\n      }\r\n      return false;\r\n    } \r\n\r\n    Faze.fn.merge = function( array1, array2 ) {\r\n      var newArray = array1;\r\n\r\n      for( var i = 0; i < array2.length; i++ ) {\r\n        newArray[i] = array2[i];\r\n      }\r\n\r\n      return newArray;\r\n    }\r\n\r\n    Faze.fn.makeArray = function( opt ) {\r\n      var ret = [];\r\n      if( opt != null ) {\r\n        if( isLikeArray( opt ) ) {\r\n          this.merge( ret, typeof opt === \"string\" ? [ opt ] : opt )\r\n        }\r\n        else {\r\n          [].push.call( ret, opt );\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n\r\n    Faze.fn.sort = function( array ) {\r\n      return array.sort( function( a, b ) {\r\n        return a.toLowerCase().localeCompare( b.toLowerCase() );\r\n      });\r\n    }\r\n\r\n    Faze.fn.random = function( array ) {\r\n      return array[ Math.floor( Math.random() * array.length ) ];\r\n    }\r\n\r\n    Faze.fn.flattenArray = function( array ) {\r\n      if( this.isArray( array ) ) {\r\n        return array.flat( Infinity );\r\n      }\r\n    }\r\n\r\n    Faze.fn.all = function( array, fn ) {\r\n      if( !fn ) {\r\n        fn = Boolean;\r\n      }\r\n      return array.every( fn );\r\n    }\r\n\r\n    // Objects ============================================\r\n    Faze.fn.compare = function( object, propname ) {\r\n      return object.sort( function( a, b ) {\r\n        return a[propname].toLowerCase() == b[propname].toLowerCase() ? 0 : a[propname].toLowerCase() < b[propname].toLowerCase() ? -1 : 1;\r\n      }); \r\n    }\r\n\r\n    Faze.fn.print_r = function( object ) {\r\n      return JSON.stringify( object, null, '\\t' ).replace( /\\n/g, '<br/>' ).replace( /\\t/g, '&nbsp;&nbsp;&nbsp;' );\r\n    }\r\n\r\n    // Helper ========================================\r\n    Faze.fn.functionExists = function( functionName ) {\r\n      return typeof functionName == 'function';\r\n    }\r\n\r\n    Faze.fn.add = function( option ) {\r\n      if( option instanceof HTMLElement  ) {\r\n        this[this.length+1] = HTMLElement;\r\n      }\r\n      else if( option instanceof NodeList ) {\r\n        var list = this.merge( this.nodes, NodeList );\r\n        for( var i = 0; i < list.length; i++ ) {\r\n          this[this.length+1] = list[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Faze.fn.after = function( option ) {\r\n\r\n    // }\r\n\r\n    // Faze.fn.append = function( option ) {\r\n\r\n    // }\r\n\r\n    Faze.fn.attr = function( options ) {\r\n      if( !options ) {\r\n        this.each( function( item ) {\r\n          return item.attributes;\r\n        });\r\n      }\r\n    }\r\n\r\n    // Faze.fn.before = function( option ) {\r\n\r\n    // } \r\n\r\n    Faze.fn.children = function() {\r\n      var children = [];\r\n      this.each( function( item ) {\r\n        if( item.hasChildNodes() ) {\r\n          children.push( this.makeArray( item.children ) );\r\n        }\r\n      });\r\n\r\n      return new Faze( children );\r\n    }\r\n\r\n    // Faze.fn.parent = function( option ) {\r\n\r\n    // }\r\n\r\n    Faze.fn.clone = function( options ) {\r\n      var elems = [];\r\n      this.each( function( item ) {\r\n        elems.push( item.clone( options ) );\r\n      });\r\n      return elems;\r\n    }\r\n\r\n    // Faze.fn.delay = function( option ) {\r\n\r\n    // }\r\n\r\n    // Faze.fn.index = function( option ) {\r\n\r\n    // }\r\n\r\n    // Faze.fn.fadeIn = function() {\r\n\r\n    // }\r\n\r\n    // Faze.fn.fadeOut = function() {\r\n\r\n    // }\r\n\r\n    // Faze.fn.toggleFade = function() {\r\n\r\n    // }\r\n\r\n    Faze.fn.html = function() {\r\n      var str = '';\r\n      this.each( function( item ) {\r\n        str += item.outerHTML;\r\n      });\r\n      return str;\r\n    }\r\n\r\n    Faze.fn.text = function() {\r\n      var str = this.html();\r\n      return str.replace( /<[^>]*>/gm, '' );  \r\n    }\r\n\r\n    // Faze.fn.isEmptyObject = function( object ) {\r\n\r\n    // }\r\n\r\n    Faze.fn.isNumeric = function( number ) {\r\n      if( !( typeof number === \"string\" ) && !( typeof number === \"number\" )  ) {\r\n        return false;\r\n      }\r\n      return number.match( /^[\\d.]+?/ );\r\n    }\r\n\r\n    // Faze.fn.parseHTML = function() {\r\n      \r\n    // }\r\n\r\n    // Faze.fn.unique = function() {\r\n\r\n    // }\r\n\r\n    // Faze.fn.next = function() {\r\n\r\n    // }\r\n\r\n    Faze.fn.on = function( eventType, callback, selector ) {\r\n      var events = eventType.split( ' ' );\r\n\r\n      for( var i = 0; i < events.length; i++ ) {\r\n        var event = events[i];\r\n\r\n        this.each( function( item ) {\r\n\r\n          if( !selector ){\r\n            item.addEventListener( event, callback );\r\n          }\r\n          else {\r\n            item.addEventListener( event, function(e) {\r\n\r\n              // console.log( Faze(e.target).hasClass( selector ) );\r\n\r\n              if( Faze(e.target).hasClass( selector ) ) {\r\n                callback.call( this, e );\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    Faze.fn.wrap = function( html ) {\r\n      var wrapper = createNodes( html );\r\n\r\n      this.each( function( item ) {\r\n        item.parentNode.insertBefore( wrapper, item );\r\n        wrapper.appendChild( item );  \r\n      });\r\n    }\r\n\r\n    Faze.fn.poll = function( fn, timeout, interval ) {\r\n      var endTime = Number( new Date() ) + ( timeout || 2000 );\r\n      interval = interval || fn();\r\n      var checkCondition = function( resolve, reject ) {\r\n        var result = fn();\r\n        if( result ) {\r\n          resolve( result );\r\n        }\r\n        else if( Number( new Date() ) < endTime ) {\r\n          setTimeout( checkCondition, interval, resolve, reject );\r\n        }\r\n        else {\r\n          reject( new Error( 'Timed out for ' + fn + ': ' + arguments ) );\r\n        }\r\n      }\r\n\r\n      return new Promise( checkCondition );\r\n    }\r\n\r\n    Faze.fn.once = function( fn, context ) {\r\n      var result;\r\n\r\n      return function() {\r\n        if( fn ) {\r\n          result = fn.apply( context || this, arguments );\r\n        }\r\n\r\n        return result;\r\n      }\r\n    }\r\n\r\n    Faze.fn.debouce = function( func, wait, immediate ) {\r\n      var timeout;\r\n      return function() {\r\n        var context = this, args = arguments;\r\n        var later = function() {\r\n          timeout = null;\r\n          if( !immediate ) {\r\n            func.apply( context, args );\r\n          }\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout( timeout );\r\n        timeout = setTimeout( later, wait );\r\n        if( callNow ) {\r\n          func.apply( context, args );\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    return new Faze();\r\n})();\n\n//# sourceURL=webpack:///./src/faze.js?");

/***/ })

/******/ });